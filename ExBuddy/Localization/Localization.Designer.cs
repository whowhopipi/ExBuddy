//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExBuddy.Localization {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ExBuddy.Localization.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} cannot be used because player is dead. .
        /// </summary>
        internal static string CordialConsumer_CordialCannotBeUsedByDeadPlayer {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialCannotBeUsedByDeadPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} cannot be used because player is mounted. .
        /// </summary>
        internal static string CordialConsumer_CordialCannotBeUsedByMountedPlayer {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialCannotBeUsedByMountedPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} cannot be used by player..
        /// </summary>
        internal static string CordialConsumer_CordialCannotBeUsedByPlayer {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialCannotBeUsedByPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} cannot be used because dismount failed..
        /// </summary>
        internal static string CordialConsumer_CordialCannotBeUsedDismountFailed {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialCannotBeUsedDismountFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 Item {0} is not valid..
        /// </summary>
        internal static string CordialConsumer_CordialItemTypeInvalid {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialItemTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} cannot be used because it is on cooldown..
        /// </summary>
        internal static string CordialConsumer_CordialOnCooldown {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialOnCooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} cannot be used because stock is depleted..
        /// </summary>
        internal static string CordialConsumer_CordialStockDepleted {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialStockDepleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🍼 {0} was used. Original GP: {1}, Cordial GP: {2}, Regenerated GP: {3}, Target GP: {4}.
        /// </summary>
        internal static string CordialConsumer_CordialUsed {
            get {
                return ResourceManager.GetString("CordialConsumer_CordialUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to resolve cordial data, if this continues, please report logs to ExMatt..
        /// </summary>
        internal static string Cordinal_NullSpellData {
            get {
                return ResourceManager.GetString("Cordinal_NullSpellData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default: Death Location: {0}, AetheryteId: {1}.
        /// </summary>
        internal static string DefaultReturnStrategy_Default {
            get {
                return ResourceManager.GetString("DefaultReturnStrategy_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Flight.
        /// </summary>
        internal static string EnableFlight_PluginName {
            get {
                return ResourceManager.GetString("EnableFlight_PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout while depositing items into free company chest..
        /// </summary>
        internal static string ExCompanyChestDeposit_Timeout {
            get {
                return ResourceManager.GetString("ExCompanyChestDeposit_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Plugin {0} already disabled..
        /// </summary>
        internal static string ExDisablePlugins_Disabled {
            get {
                return ResourceManager.GetString("ExDisablePlugins_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabling Plugins: .
        /// </summary>
        internal static string ExDisablePlugins_Disabling {
            get {
                return ResourceManager.GetString("ExDisablePlugins_Disabling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabling Plugin {0}.
        /// </summary>
        internal static string ExDisablePlugins_Disabling2 {
            get {
                return ResourceManager.GetString("ExDisablePlugins_Disabling2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Plugin {0} already enabled..
        /// </summary>
        internal static string ExEnablePlugins_Enabled {
            get {
                return ResourceManager.GetString("ExEnablePlugins_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enabling Plugins: .
        /// </summary>
        internal static string ExEnablePlugins_Enabling {
            get {
                return ResourceManager.GetString("ExEnablePlugins_Enabling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enabling Plugin {0}.
        /// </summary>
        internal static string ExEnablePlugins_Enabling2 {
            get {
                return ResourceManager.GetString("ExEnablePlugins_Enabling2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The fish are amiss at all of the FishSpots..
        /// </summary>
        internal static string ExFish_AmissFish {
            get {
                return ResourceManager.GetString("ExFish_AmissFish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The fish sense something amiss. Perhaps it is time to try another location..
        /// </summary>
        internal static string ExFish_AmissFish2 {
            get {
                return ResourceManager.GetString("ExFish_AmissFish2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The fish sense something amiss!.
        /// </summary>
        internal static string ExFish_AmissFish3 {
            get {
                return ResourceManager.GetString("ExFish_AmissFish3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error has occurred during bait selection..
        /// </summary>
        internal static string ExFish_BaitSelectError {
            get {
                return ResourceManager.GetString("ExFish_BaitSelectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This zone has been blacklisted, please fish somewhere else and then restart the profile..
        /// </summary>
        internal static string ExFish_BlackList {
            get {
                return ResourceManager.GetString("ExFish_BlackList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error finding &apos;{0}&apos;, doesn&apos;t match any item in the database..
        /// </summary>
        internal static string ExFish_CannotFindBait {
            get {
                return ResourceManager.GetString("ExFish_CannotFindBait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Changing FishSpots....
        /// </summary>
        internal static string ExFish_ChangeSpots {
            get {
                return ResourceManager.GetString("ExFish_ChangeSpots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting for the proper weather....
        /// </summary>
        internal static string ExFish_CheckWeather {
            get {
                return ResourceManager.GetString("ExFish_CheckWeather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Collecting {0} -&gt; Value: {1}, Required: {2}.
        /// </summary>
        internal static string ExFish_Collecting {
            get {
                return ResourceManager.GetString("ExFish_Collecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Casting Collector&apos;s Glove.
        /// </summary>
        internal static string ExFish_CollectorsGlove {
            get {
                return ResourceManager.GetString("ExFish_CollectorsGlove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Declining {0} -&gt; Value: {1}, Required: {2}.
        /// </summary>
        internal static string ExFish_Declining {
            get {
                return ResourceManager.GetString("ExFish_Declining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fished {0} of {1} fish at this FishSpot..
        /// </summary>
        internal static string ExFish_Fish {
            get {
                return ResourceManager.GetString("ExFish_Fish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You land(?: a| an)? (.+) measuring (\d{1,4}\.\d) ilms!.
        /// </summary>
        internal static string ExFish_FishRegex {
            get {
                return ResourceManager.GetString("ExFish_FishRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Will fish for .
        /// </summary>
        internal static string ExFish_InitFishSpot {
            get {
                return ResourceManager.GetString("ExFish_InitFishSpot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  fish before moving again..
        /// </summary>
        internal static string ExFish_InitFishSpot2 {
            get {
                return ResourceManager.GetString("ExFish_InitFishSpot2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error: &apos;{0}&apos; is not considered bait..
        /// </summary>
        internal static string ExFish_IsNotBait {
            get {
                return ResourceManager.GetString("ExFish_IsNotBait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mooching, this is mooch {0} of {1} mooches..
        /// </summary>
        internal static string ExFish_Mooch {
            get {
                return ResourceManager.GetString("ExFish_Mooch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mooching, this will be the only mooch..
        /// </summary>
        internal static string ExFish_Mooch2 {
            get {
                return ResourceManager.GetString("ExFish_Mooch2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No Cordial available, buy more .
        /// </summary>
        internal static string ExFish_NoCordial {
            get {
                return ResourceManager.GetString("ExFish_NoCordial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You do not sense any fish here..
        /// </summary>
        internal static string ExFish_NoSenceOfFish {
            get {
                return ResourceManager.GetString("ExFish_NoSenceOfFish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You do not sense any fish here, trying next location..
        /// </summary>
        internal static string ExFish_NoSenceOfFish2 {
            get {
                return ResourceManager.GetString("ExFish_NoSenceOfFish2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You do not have the specified bait:.
        /// </summary>
        internal static string ExFish_NotHaveBait {
            get {
                return ResourceManager.GetString("ExFish_NotHaveBait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Patience activated.
        /// </summary>
        internal static string ExFish_Patience {
            get {
                return ResourceManager.GetString("ExFish_Patience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Released .
        /// </summary>
        internal static string ExFish_Release {
            get {
                return ResourceManager.GetString("ExFish_Release", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resetting fish count....
        /// </summary>
        internal static string ExFish_ResetCount {
            get {
                return ResourceManager.GetString("ExFish_ResetCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resetting mooch level..
        /// </summary>
        internal static string ExFish_ResetMooch {
            get {
                return ResourceManager.GetString("ExFish_ResetMooch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sitting .
        /// </summary>
        internal static string ExFish_Sit {
            get {
                return ResourceManager.GetString("ExFish_Sit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle Snagging.
        /// </summary>
        internal static string ExFish_Snagging {
            get {
                return ResourceManager.GetString("ExFish_Snagging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shuffled fish spots.
        /// </summary>
        internal static string ExFish_SuffleSpots {
            get {
                return ResourceManager.GetString("ExFish_SuffleSpots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} TugType detected. Using {1}.
        /// </summary>
        internal static string ExFish_TugType {
            get {
                return ResourceManager.GetString("ExFish_TugType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using bait -&gt; .
        /// </summary>
        internal static string ExFish_UseBait {
            get {
                return ResourceManager.GetString("ExFish_UseBait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using Cordial -&gt; Waiting (sec): {0}, CurrentGP: {1}.
        /// </summary>
        internal static string ExFish_UseCordial {
            get {
                return ResourceManager.GetString("ExFish_UseCordial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using cordial when it becomes available.
        /// </summary>
        internal static string ExFish_UseCordialWhenAvailable {
            get {
                return ResourceManager.GetString("ExFish_UseCordialWhenAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deviating from course to waypoint: {0}.
        /// </summary>
        internal static string ExFlyTo_Deviating {
            get {
                return ResourceManager.GetString("ExFlyTo_Deviating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Already in range -&gt; Start: {0}, End: {1}.
        /// </summary>
        internal static string ExFlyTo_Distance {
            get {
                return ResourceManager.GetString("ExFlyTo_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using existing FlightPath {0} from {1} to {2}.
        /// </summary>
        internal static string ExFlyTo_ExsistingPath {
            get {
                return ResourceManager.GetString("ExFlyTo_ExsistingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generating Path.
        /// </summary>
        internal static string ExFlyTo_GenPath {
            get {
                return ResourceManager.GetString("ExFlyTo_GenPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Landing took {0} ms.
        /// </summary>
        internal static string ExFlyTo_Landing {
            get {
                return ResourceManager.GetString("ExFlyTo_Landing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to waypoint: {0}.
        /// </summary>
        internal static string ExFlyTo_MoveToWaypoint {
            get {
                return ResourceManager.GetString("ExFlyTo_MoveToWaypoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to waypoint [{0}]: {1}.
        /// </summary>
        internal static string ExFlyTo_MoveToWaypoint2 {
            get {
                return ResourceManager.GetString("ExFlyTo_MoveToWaypoint2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Building new FlightPath {0} from {1} to {2}.
        /// </summary>
        internal static string ExFlyTo_NewPath {
            get {
                return ResourceManager.GetString("ExFlyTo_NewPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No viable path computed for {0}..
        /// </summary>
        internal static string ExFlyTo_NoViablePath {
            get {
                return ResourceManager.GetString("ExFlyTo_NoViablePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Starting GP: {0}, Current GP: {1}, Effective GP: {2}, Breakpoint GP: {3}, Target GP: {4}, Max GP: {5}, Selected Cordial: {6}, Selected Cordial Size: {7}.
        /// </summary>
        internal static string ExGather_BeforeGatherReport {
            get {
                return ResourceManager.GetString("ExGather_BeforeGatherReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Regenerating GP for approximately {0} seconds..
        /// </summary>
        internal static string ExGather_BeforeGatherWait {
            get {
                return ResourceManager.GetString("ExGather_BeforeGatherWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Blacklisting node so that we don&apos;t retarget -&gt; .
        /// </summary>
        internal static string ExGather_BlackListNode {
            get {
                return ResourceManager.GetString("ExGather_BlackListNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No Cordial available, buy more .
        /// </summary>
        internal static string ExGather_CordialNotAvailable {
            get {
                return ResourceManager.GetString("ExGather_CordialNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using Cordial -&gt; Waiting (sec): {0}, CurrentGP: {1}.
        /// </summary>
        internal static string ExGather_CordialUse {
            get {
                return ResourceManager.GetString("ExGather_CordialUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cordial use has been disabled because there is no cordial stock.
        /// </summary>
        internal static string ExGather_CordialUseDisabledNoStock {
            get {
                return ResourceManager.GetString("ExGather_CordialUseDisabledNoStock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using .
        /// </summary>
        internal static string ExGather_CordialUsing {
            get {
                return ResourceManager.GetString("ExGather_CordialUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cordial not enabled.  To enable cordial use, add the &apos;cordialType&apos; attribute with value &apos;Auto&apos;, &apos;Cordial&apos;, or &apos;HiCordial&apos;.
        /// </summary>
        internal static string ExGather_DisabledCordial {
            get {
                return ResourceManager.GetString("ExGather_DisabledCordial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Before gather cordial not enabled.  To enable, add the &apos;cordialTime&apos; attribute with value &apos;BeforeGather&apos;, &apos;IfNeeded&apos;, &apos;IfNeededOrAfter&apos;, or &apos;Auto&apos;.
        /// </summary>
        internal static string ExGather_DisabledCordialBeforeGather {
            get {
                return ResourceManager.GetString("ExGather_DisabledCordialBeforeGather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using a distance of greater than 3.5 is not supported, change the value and restart the profile..
        /// </summary>
        internal static string ExGather_Distance {
            get {
                return ResourceManager.GetString("ExGather_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Distance to furthest vector in hotspot -&gt; .
        /// </summary>
        internal static string ExGather_DistanceHotSpot {
            get {
                return ResourceManager.GetString("ExGather_DistanceHotSpot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Distance to furthest visible game object -&gt; .
        /// </summary>
        internal static string ExGather_DistanceObject {
            get {
                return ResourceManager.GetString("ExGather_DistanceObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Something happened during gathering and we did not complete the sequence.
        /// </summary>
        internal static string ExGather_ExecutePoiLogic {
            get {
                return ResourceManager.GetString("ExGather_ExecutePoiLogic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finished gathering from {0} with {1} GP at {2} ET.
        /// </summary>
        internal static string ExGather_Finished {
            get {
                return ResourceManager.GetString("ExGather_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finished {0} of {1} loops..
        /// </summary>
        internal static string ExGather_FinishedLoop {
            get {
                return ResourceManager.GetString("ExGather_FinishedLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inventory is full and no shards/crystals/clusters to gather. Gathering complete..
        /// </summary>
        internal static string ExGather_FullInventory {
            get {
                return ResourceManager.GetString("ExGather_FullInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GatherSpot set -&gt; .
        /// </summary>
        internal static string ExGather_GatherSpotSet {
            get {
                return ResourceManager.GetString("ExGather_GatherSpotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Started gathering from {0} with {1}/{2} GP at {3} ET.
        /// </summary>
        internal static string ExGather_GatherStart {
            get {
                return ResourceManager.GetString("ExGather_GatherStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gathering Window didn&apos;t open: Retrying. {0}/5.
        /// </summary>
        internal static string ExGather_GatherWindow {
            get {
                return ResourceManager.GetString("ExGather_GatherWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gathering Window didn&apos;t open: Re-attempting to move into place. {0}/5.
        /// </summary>
        internal static string ExGather_GatherWindow2 {
            get {
                return ResourceManager.GetString("ExGather_GatherWindow2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GP recovering faster than cordial cooldown, waiting for GP. Seconds: {0}.
        /// </summary>
        internal static string ExGather_GPRecover {
            get {
                return ResourceManager.GetString("ExGather_GPRecover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting for GP.
        /// </summary>
        internal static string ExGather_GPWait {
            get {
                return ResourceManager.GetString("ExGather_GPWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting for GP -&gt; Seconds: {0}, Current GP: {1}, WaitForGP: {2}.
        /// </summary>
        internal static string ExGather_GPWaitDetailed {
            get {
                return ResourceManager.GetString("ExGather_GPWaitDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to hotspot {0}{1}.
        /// </summary>
        internal static string ExGather_MoveToHotSpot {
            get {
                return ResourceManager.GetString("ExGather_MoveToHotSpot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not find any nodes and can not confirm hotspot is empty via object detection, trying again from center of hotspot..
        /// </summary>
        internal static string ExGather_NoAvailableNode {
            get {
                return ResourceManager.GetString("ExGather_NoAvailableNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No cordial was found that satisfies the missing GP. Original GP: {0}, Target GP: {1}, Total Missing: {2}.
        /// </summary>
        internal static string ExGather_NoCordialWasAppropriate {
            get {
                return ResourceManager.GetString("ExGather_NoCordialWasAppropriate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Node on blacklist, waiting until we move out of range or it clears..
        /// </summary>
        internal static string ExGather_NodeBlacklist {
            get {
                return ResourceManager.GetString("ExGather_NodeBlacklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Node removed from blacklist..
        /// </summary>
        internal static string ExGather_NodeBlacklistRemoved {
            get {
                return ResourceManager.GetString("ExGather_NodeBlacklistRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Interacting with node.
        /// </summary>
        internal static string ExGather_NodeInteract {
            get {
                return ResourceManager.GetString("ExGather_NodeInteract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Node is gone.
        /// </summary>
        internal static string ExGather_NodeIsGone {
            get {
                return ResourceManager.GetString("ExGather_NodeIsGone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Node Reset, Reason: Ran out of range.
        /// </summary>
        internal static string ExGather_NodeReset {
            get {
                return ResourceManager.GetString("ExGather_NodeReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Node set -&gt; .
        /// </summary>
        internal static string ExGather_NodeSet {
            get {
                return ResourceManager.GetString("ExGather_NodeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not enough gp to use rotation, cancelling gather..
        /// </summary>
        internal static string ExGather_NotEnoughGP {
            get {
                return ResourceManager.GetString("ExGather_NotEnoughGP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not enough time to gather, will still make an attempt..
        /// </summary>
        internal static string ExGather_NotEnoughTime {
            get {
                return ResourceManager.GetString("ExGather_NotEnoughTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to find an item to gather, moving on..
        /// </summary>
        internal static string ExGather_NothingToGather {
            get {
                return ResourceManager.GetString("ExGather_NothingToGather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à could not find item by slot or name, gathering .
        /// </summary>
        internal static string ExGather_NothingToGather2 {
            get {
                return ResourceManager.GetString("ExGather_NothingToGather2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  instead..
        /// </summary>
        internal static string ExGather_NothingToGather3 {
            get {
                return ResourceManager.GetString("ExGather_NothingToGather3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to get types, Loading Known Rotations..
        /// </summary>
        internal static string ExGather_NoTypeSpecified {
            get {
                return ResourceManager.GetString("ExGather_NoTypeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Estimating rotation based off {0}.
        /// </summary>
        internal static string ExGather_Rotationbaseoff {
            get {
                return ResourceManager.GetString("ExGather_Rotationbaseoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Estimating rotation based off GatherIncrease: &apos;{0}&apos;.
        /// </summary>
        internal static string ExGather_RotationbaseoffGatherIncrease {
            get {
                return ResourceManager.GetString("ExGather_RotationbaseoffGatherIncrease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rotation Estimate -&gt; Old: {0} , New: {1}.
        /// </summary>
        internal static string ExGather_RotationEstimate {
            get {
                return ResourceManager.GetString("ExGather_RotationEstimate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loaded Rotation -&gt; {0}, GP: {1}, Time: {2}.
        /// </summary>
        internal static string ExGather_RotationLoad {
            get {
                return ResourceManager.GetString("ExGather_RotationLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rotation did not change.
        /// </summary>
        internal static string ExGather_RotationNotChange {
            get {
                return ResourceManager.GetString("ExGather_RotationNotChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not find rotation, using RegularNode instead..
        /// </summary>
        internal static string ExGather_RotationNotFound {
            get {
                return ResourceManager.GetString("ExGather_RotationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rotation Override -&gt; Old: {0} , New: {1}.
        /// </summary>
        internal static string ExGather_RotationOverride {
            get {
                return ResourceManager.GetString("ExGather_RotationOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Item to gather is unknown, we are overriding the rotation to ensure we can collect it..
        /// </summary>
        internal static string ExGather_RotationOverriding {
            get {
                return ResourceManager.GetString("ExGather_RotationOverriding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rotation reset -&gt; .
        /// </summary>
        internal static string ExGather_RotationReset {
            get {
                return ResourceManager.GetString("ExGather_RotationReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using rotation -&gt; .
        /// </summary>
        internal static string ExGather_RotationUse {
            get {
                return ResourceManager.GetString("ExGather_RotationUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Searching for nodes.
        /// </summary>
        internal static string ExGather_SearchForNodes {
            get {
                return ResourceManager.GetString("ExGather_SearchForNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skip furthest nodes in hotspot. We only want 1..
        /// </summary>
        internal static string ExGather_SkipFurthestNodes {
            get {
                return ResourceManager.GetString("ExGather_SkipFurthestNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skipping this node, no items we want to gather..
        /// </summary>
        internal static string ExGather_SkipNode {
            get {
                return ResourceManager.GetString("ExGather_SkipNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TouchAndGo strategy override, not waiting for GP unless we are on an ephemeral node.
        /// </summary>
        internal static string ExGather_TnGEphemeral {
            get {
                return ResourceManager.GetString("ExGather_TnGEphemeral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TouchAndGo override, maxTimeout being set between 2 and 16 seconds.
        /// </summary>
        internal static string ExGather_TnGOverride {
            get {
                return ResourceManager.GetString("ExGather_TnGOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Expected wait of {0} exceeds maximum TouchAndGo wait of {1}.
        /// </summary>
        internal static string ExGather_TnGSeconds {
            get {
                return ResourceManager.GetString("ExGather_TnGSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à we should never be here, report error with info GP: {0}, WaitForGp: {1}.
        /// </summary>
        internal static string ExGather_WaitForGp {
            get {
                return ResourceManager.GetString("ExGather_WaitForGp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gathering without the minimum recommended GP for the rotation.
        /// </summary>
        internal static string ExGather_WithoutMiniumGP {
            get {
                return ResourceManager.GetString("ExGather_WithoutMiniumGP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ZoneId [{0}], Calling Location {1}.
        /// </summary>
        internal static string ExGather_Zone {
            get {
                return ResourceManager.GetString("ExGather_Zone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to {0}{1}, {2}.
        /// </summary>
        internal static string ExMoveTo_Move {
            get {
                return ResourceManager.GetString("ExMoveTo_Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using random location -&gt; {0}.
        /// </summary>
        internal static string ExMoveTo_Random {
            get {
                return ResourceManager.GetString("ExMoveTo_Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to Npc -&gt; .
        /// </summary>
        internal static string ExPickupGuildLeve_Move {
            get {
                return ResourceManager.GetString("ExPickupGuildLeve_Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Picking up Leve -&gt; .
        /// </summary>
        internal static string ExPickupGuildLeve_Pickup {
            get {
                return ResourceManager.GetString("ExPickupGuildLeve_Pickup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Picking up Leve: .
        /// </summary>
        internal static string ExPickupGuildLeve_Pickup2 {
            get {
                return ResourceManager.GetString("ExPickupGuildLeve_Pickup2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not dismount..
        /// </summary>
        internal static string ExPurify_Dismount {
            get {
                return ResourceManager.GetString("ExPurify_Dismount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Did not meet the condition to Purify, [{0}].
        /// </summary>
        internal static string ExPurify_GetCondition {
            get {
                return ResourceManager.GetString("ExPurify_GetCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Can&apos;t reduce unless we land!.
        /// </summary>
        internal static string ExPurify_Land {
            get {
                return ResourceManager.GetString("ExPurify_Land", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Did not meet the condition to salvage, [{0}].
        /// </summary>
        internal static string ExSalvage_GetCondition {
            get {
                return ResourceManager.GetString("ExSalvage_GetCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Can&apos;t salvage unless we land!.
        /// </summary>
        internal static string ExSalvage_Land {
            get {
                return ResourceManager.GetString("ExSalvage_Land", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Spearfish : {0}, HQ : {1}, size: {2} at {3} ET..
        /// </summary>
        internal static string ExSpearFish_SpearFishing {
            get {
                return ResourceManager.GetString("ExSpearFish_SpearFishing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Using Veteran Trade on {0}..
        /// </summary>
        internal static string ExSpearFish_UsingVeteranTrade {
            get {
                return ResourceManager.GetString("ExSpearFish_UsingVeteranTrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Attempting to turn in item {0} -&gt; 0x{1}.
        /// </summary>
        internal static string ExTurnInCollectable_AttemptingTurnin {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_AttemptingTurnin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error, could not resolve class type for item:.
        /// </summary>
        internal static string ExTurnInCollectable_ErrorClassType {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_ErrorClassType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to purchase item {0}, set location to Rhalgr&apos;s Reach..
        /// </summary>
        internal static string ExTurnInCollectable_FailedPurchaseMorDhona {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_FailedPurchaseMorDhona", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout interacting with npc..
        /// </summary>
        internal static string ExTurnInCollectable_InteractingTimeout {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_InteractingTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to Npc -&gt; .
        /// </summary>
        internal static string ExTurnInCollectable_Move {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No items to purchase.
        /// </summary>
        internal static string ExTurnInCollectable_NoItemToPurchase {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_NoItemToPurchase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Interacting with Npc -&gt; .
        /// </summary>
        internal static string ExTurnInCollectable_NpcInteract {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_NpcInteract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Purchasing items.
        /// </summary>
        internal static string ExTurnInCollectable_Purchase {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_Purchase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Purchases complete..
        /// </summary>
        internal static string ExTurnInCollectable_PurchaseComplete {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_PurchaseComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Purchased {5} {0} for {1} {2} scrips at {3} ET; Remaining Scrips: {4}.
        /// </summary>
        internal static string ExTurnInCollectable_Purchased {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_Purchased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout during purchase of {0}.
        /// </summary>
        internal static string ExTurnInCollectable_PurchaseTimeout {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_PurchaseTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scrips remaining for shop {0} -&gt; Count: {1}.
        /// </summary>
        internal static string ExTurnInCollectable_ScripsRemaining {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_ScripsRemaining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inventory for {0} -&gt; Count: {1}.
        /// </summary>
        internal static string ExTurnInCollectable_ShopPurchase {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_ShopPurchase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout targeting npc..
        /// </summary>
        internal static string ExTurnInCollectable_TargetingTimeout {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_TargetingTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Turning in items.
        /// </summary>
        internal static string ExTurnInCollectable_TurnIn {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_TurnIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Don&apos;t turn in this item for 3 minutes.
        /// </summary>
        internal static string ExTurnInCollectable_TurnInBlackList {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_TurnInBlackList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error has occured while turning in the item.
        /// </summary>
        internal static string ExTurnInCollectable_TurnInError {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_TurnInError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Turned in {0} at {1} ET.
        /// </summary>
        internal static string ExTurnInCollectable_TurnInSuccessful {
            get {
                return ResourceManager.GetString("ExTurnInCollectable_TurnInSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking for transport window..
        /// </summary>
        internal static string ExTurnInGuildLeve_CheckTransport {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_CheckTransport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Collecting reward on {0} ET.
        /// </summary>
        internal static string ExTurnInGuildLeve_CollectReward {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_CollectReward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Completed on {0} ET.
        /// </summary>
        internal static string ExTurnInGuildLeve_Complete {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to Npc -&gt; .
        /// </summary>
        internal static string ExTurnInGuildLeve_Move {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No items to turn in. Settings -&gt; HqOnly: {0}, NqOnly: {1}, ItemId: {2}.
        /// </summary>
        internal static string ExTurnInGuildLeve_NoItemToTurnin {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_NoItemToTurnin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No more quests to turn in..
        /// </summary>
        internal static string ExTurnInGuildLeve_NoMoreQuests {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_NoMoreQuests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Looks like we don&apos;t have any quests to turn in..
        /// </summary>
        internal static string ExTurnInGuildLeve_NoMoveQuests2 {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_NoMoveQuests2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No rewards left, turn-ins complete..
        /// </summary>
        internal static string ExTurnInGuildLeve_NoRewardsLeft {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_NoRewardsLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We don&apos;t have any completed quests left to turn in..
        /// </summary>
        internal static string ExTurnInGuildLeve_NothingToTurnin {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_NothingToTurnin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Looks like no windows are open, lets clear our target and try again..
        /// </summary>
        internal static string ExTurnInGuildLeve_OpenWindow {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_OpenWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selecting transport option..
        /// </summary>
        internal static string ExTurnInGuildLeve_SelectTransport {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_SelectTransport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Turning in items.
        /// </summary>
        internal static string ExTurnInGuildLeve_TurnIn {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_TurnIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Turned in HQ {0} on {1} ET.
        /// </summary>
        internal static string ExTurnInGuildLeve_TurnInHq {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_TurnInHq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Turning in more items on {0} ET.
        /// </summary>
        internal static string ExTurnInGuildLeve_TurninMore {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_TurninMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Turned in {0} on {1} ET.
        /// </summary>
        internal static string ExTurnInGuildLeve_TurnInNq {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_TurnInNq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout while turning in leve..
        /// </summary>
        internal static string ExTurnInGuildLeve_TurninTimeout {
            get {
                return ResourceManager.GetString("ExTurnInGuildLeve_TurninTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selecting line .
        /// </summary>
        internal static string ExUseAethernet_SelectLine {
            get {
                return ResourceManager.GetString("ExUseAethernet_SelectLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout, SelectString window did not open..
        /// </summary>
        internal static string ExUseAethernet_SelectLineTimeout {
            get {
                return ResourceManager.GetString("ExUseAethernet_SelectLineTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Collision detected! Generating new path!.
        /// </summary>
        internal static string FlightEnabledNavigator_CollisionDetected {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_CollisionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Navigation reached current destination. Within.
        /// </summary>
        internal static string FlightEnabledNavigator_DestinationReached {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_DestinationReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Putting original Navigator back!.
        /// </summary>
        internal static string FlightEnabledNavigator_Dispose {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_Dispose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Replacing Navigator with Flight Navigator..
        /// </summary>
        internal static string FlightEnabledNavigator_Enabled {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to next hop: {0}{1} D: {2}.
        /// </summary>
        internal static string FlightEnabledNavigator_HopMoving {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_HopMoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving to next hop [{0}]: {1}{2} D: {3}.
        /// </summary>
        internal static string FlightEnabledNavigator_HopMoving2 {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_HopMoving2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error encountered trying to find a path. Trying innerNavigator for 10 seconds before re-enabling flight..
        /// </summary>
        internal static string FlightEnabledNavigator_NoPath {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_NoPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Found existing path to {0} using {1} hops in {2} ms.
        /// </summary>
        internal static string FlightEnabledNavigator_PathFound {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_PathFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generated path to {0} using {1} hops in {2} ms.
        /// </summary>
        internal static string FlightEnabledNavigator_PathGenerated {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_PathGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No viable path found to {0} from {1}.
        /// </summary>
        internal static string FlightEnabledNavigator_PathNotViable {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_PathNotViable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resetting NavigationProvider to Flight Navigator..
        /// </summary>
        internal static string FlightEnabledNavigator_ResetNavigatonProvider {
            get {
                return ResourceManager.GetString("FlightEnabledNavigator_ResetNavigatonProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set default value for flying to false until we can determine if we can fly in this zone..
        /// </summary>
        internal static string FlightEnabledSlideMover_Default {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Landing took {0} ms or less.
        /// </summary>
        internal static string FlightEnabledSlideMover_Land {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_Land", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Landing cancelled after {0} ms. New destination requested..
        /// </summary>
        internal static string FlightEnabledSlideMover_LandCancelled {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_LandCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Landing failed. Passing back control..
        /// </summary>
        internal static string FlightEnabledSlideMover_LandFailed {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_LandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Created new Landing Unstuck Coroutine, moving to {0}.
        /// </summary>
        internal static string FlightEnabledSlideMover_LandNew {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_LandNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resumed Landing Unstuck Coroutine.
        /// </summary>
        internal static string FlightEnabledSlideMover_LandResumed {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_LandResumed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Started Landing Task.
        /// </summary>
        internal static string FlightEnabledSlideMover_LandStart {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_LandStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Takeoff took {0} ms or less.
        /// </summary>
        internal static string FlightEnabledSlideMover_Takeoff {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_Takeoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Takeoff cancelled after {0} ms. IPlayerMover.Stop() was called..
        /// </summary>
        internal static string FlightEnabledSlideMover_TakeoffCancelled {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_TakeoffCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Takeoff failed. Passing back control..
        /// </summary>
        internal static string FlightEnabledSlideMover_TakeoffFailed {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_TakeoffFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Created new Takeoff Coroutine.
        /// </summary>
        internal static string FlightEnabledSlideMover_TakeoffNew {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_TakeoffNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resumed Takeoff Coroutine.
        /// </summary>
        internal static string FlightEnabledSlideMover_TakeoffResumed {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_TakeoffResumed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Started Takeoff Task.
        /// </summary>
        internal static string FlightEnabledSlideMover_TakeoffStart {
            get {
                return ResourceManager.GetString("FlightEnabledSlideMover_TakeoffStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [MasterPieceSupply] Can&apos;t turn in &apos;{0}&apos; today, the current turn in is &apos;{1}&apos;.
        /// </summary>
        internal static string MasterPieceSupply_CannotTurnIn {
            get {
                return ResourceManager.GetString("MasterPieceSupply_CannotTurnIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [MasterPieceSupply] Collectability value &apos;{0}&apos; is too low or we can&apos;t turn in {1} today..
        /// </summary>
        internal static string MasterPieceSupply_CollectabilityValueNotEnough {
            get {
                return ResourceManager.GetString("MasterPieceSupply_CollectabilityValueNotEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [MasterPieceSupply] Not turning in &apos;{0}&apos;, full on scrips..
        /// </summary>
        internal static string MasterPieceSupply_FullScrips {
            get {
                return ResourceManager.GetString("MasterPieceSupply_FullScrips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aethernet..
        /// </summary>
        internal static string NoAetheryteUseAethernetReturn_AethernetText {
            get {
                return ResourceManager.GetString("NoAetheryteUseAethernetReturn_AethernetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error has occured during aetherial reduction. Result was {0}.
        /// </summary>
        internal static string PurifyDialog {
            get {
                return ResourceManager.GetString("PurifyDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not find nearby summoning bell.
        /// </summary>
        internal static string RetainerMaid_NoNearestSummoningBell {
            get {
                return ResourceManager.GetString("RetainerMaid_NoNearestSummoningBell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RetainerMaid.
        /// </summary>
        internal static string RetainerMaid_PluginName {
            get {
                return ResourceManager.GetString("RetainerMaid_PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &quot;An error has occured during desynthesis. Result was {0}&quot;.
        /// </summary>
        internal static string SalvageDialog {
            get {
                return ResourceManager.GetString("SalvageDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skywatcher is not enabled in plugins.  Enable it and restart the bot..
        /// </summary>
        internal static string SkyWatcher_CheckEnabled {
            get {
                return ResourceManager.GetString("SkyWatcher_CheckEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skywatcher.
        /// </summary>
        internal static string Skywatcher_PluginName {
            get {
                return ResourceManager.GetString("Skywatcher_PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Attempting to close the [{0}] window.
        /// </summary>
        internal static string Window_Attempting {
            get {
                return ResourceManager.GetString("Window_Attempting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The [{0}] window has been closed..
        /// </summary>
        internal static string Window_Closed {
            get {
                return ResourceManager.GetString("Window_Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The [{0}] window was not valid, it was either not open or closed on its own..
        /// </summary>
        internal static string Window_invalid {
            get {
                return ResourceManager.GetString("Window_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unexpected result while closing [{0}].
        /// </summary>
        internal static string Window_UnexpectedResult {
            get {
                return ResourceManager.GetString("Window_UnexpectedResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting {0} ms for [{1}] window to close.
        /// </summary>
        internal static string Window_WaitToClose {
            get {
                return ResourceManager.GetString("Window_WaitToClose", resourceCulture);
            }
        }
    }
}
